% script to read in tecan data, group columns, and plot
clear
close all
addpath('../utilities')
% set path to data
DataFolder = 'C:\Users\nlamm\Dropbox (Personal)\rna_detection\np_data\';

% DataName = '050720_NCR018.xlsx';
% SheetName = 'NCR018';
DataName = '051120_NCR018_v2.xlsx';
SheetName = 'NCR018_v2';
DataPath = [DataFolder DataName];

% make path for figures
FigRoot = '../../fig/data_analysis/';
FigPath = [FigRoot SheetName '/'];
mkdir(FigPath);

% make path for cleaned figure data
WriteRoot = '../../out/data_analysis/';
WritePath = [WriteRoot SheetName '/'];
mkdir(WritePath);

% get sheet info
[~,SheetNames]=xlsfinfo(DataPath);
SheetIndex = find(ismember(SheetNames,SheetName));
MapIndex = find(ismember(SheetNames,[SheetName '_map']));
% read sheet
[~,~,SheetCell] = xlsread(DataPath,SheetIndex);

% get index of data header row
HeaderRowIndex = find(strcmp(SheetCell(:,1),{'Cycle Nr.'}));
LastRowIndex = find(~cellfun(@isempty,SheetCell(:,8)),1,'last')-4;
LastColIndex = find(~cellfun(@isempty,SheetCell(HeaderRowIndex,:)),1,'last');

% generate trucnated sheet
ExpCell = SheetCell(HeaderRowIndex:LastRowIndex,1:LastColIndex);
HeaderRow = ExpCell(1,:);

%%%%%%%%%%%%%%
% Group columns based on position within 384 well plate
%%%%%%%%%%%%%%
col_num_vec = [];
row_num_vec = [];
row_string_cell = {};
for e = 4:length(HeaderRow)
    string = HeaderRow{e};   
    row_string_cell = [row_string_cell {string(1)}];
end

row_string_index = unique(row_string_cell);
for e = 4:length(HeaderRow)
    string = HeaderRow{e};
    row_ind = find(strcmp(string(1),row_string_index));
    col_num_vec = [col_num_vec str2double(string(2:end))];
    row_num_vec = [row_num_vec row_ind];    
end

row_vec_coarse = round(row_num_vec/2);
col_vec_coarse = round(col_num_vec/2);
group_id_vec = [NaN(1,3) (row_vec_coarse-1)*max(col_vec_coarse) + col_vec_coarse];

%%%%%%%%%%%%%%
% Read in plate map
%%%%%%%%%%%%%%

% manually specify cage-only group 
cage_only_id = 7; 
negative_id = 10; 
activator_rows = 3:10;
NCR_rows = 11:12;
Cas13Row = 15; 
ExcludeGroups = 9;
% read sheet
[~,~,MapCell] = xlsread(DataPath,MapIndex);

%%%%%%%%%%%%%%
% Compile data to plot
%%%%%%%%%%%%%%

% initialize structure to store plotting info
plot_struct = struct;
full_table = table;
stats_table = table;

% check which groups are NCR
ncr_flag_vec = ~isnan(max(cell2mat(MapCell(NCR_rows,3:end))));
cas_flag_vec = ~isnan(cell2mat(MapCell(Cas13Row,3:end)));
use_flag = ~ismember(1:size(MapCell,2)-2,ExcludeGroups);
for a = 1:numel(activator_rows)+1
    % get basic info
    if a <= numel(activator_rows)      
      ac_ind = activator_rows(a);
      ac_val = MapCell{ac_ind,2};
      plot_struct(a).act_ncr_groups = find(use_flag&cas_flag_vec&ncr_flag_vec&~isnan(cell2mat(MapCell(ac_ind,3:end))));
      plot_struct(a).act_prim_groups = find(use_flag&cas_flag_vec&~ncr_flag_vec&~isnan(cell2mat(MapCell(ac_ind,3:end))));
    else      
      ac_val = -1;
      ac_ind = NaN;
      plot_struct(a).act_ncr_groups = cage_only_id;
      plot_struct(a).act_prim_groups = negative_id;
    end
    % record
    plot_struct(a).ac_ind = ac_ind;
    plot_struct(a).ac_val = ac_val;
    % pull raw values to plotd
    plot_struct(a).ncr_cols_orig = find(ismember(group_id_vec,plot_struct(a).act_ncr_groups));
    plot_struct(a).ncr_data = cell2mat(ExpCell(2:end,plot_struct(a).ncr_cols_orig));
    plot_struct(a).ncr_data = plot_struct(a).ncr_data - plot_struct(a).ncr_data(1,:);
    plot_struct(a).primary_cols_orig = find(ismember(group_id_vec,plot_struct(a).act_prim_groups));
    plot_struct(a).primary_data = cell2mat(ExpCell(2:end,plot_struct(a).primary_cols_orig));
    plot_struct(a).primary_data = plot_struct(a).primary_data - plot_struct(a).primary_data(1,:);
    % flag potential outlier series
    plot_struct(a).ncr_outlier_flags = prctile(isoutlier(plot_struct(a).ncr_data,2),33)==1;
    plot_struct(a).primary_outlier_flags = prctile(isoutlier(plot_struct(a).primary_data,2),33)==1;
    % calculate summary statistics
    plot_struct(a).ncr_mean = nanmean(plot_struct(a).ncr_data(:,~plot_struct(a).ncr_outlier_flags),2);
    plot_struct(a).ncr_std = nanstd(plot_struct(a).ncr_data(:,~plot_struct(a).ncr_outlier_flags),[],2);
    plot_struct(a).primary_mean = nanmean(plot_struct(a).primary_data(:,~plot_struct(a).ncr_outlier_flags),2);
    plot_struct(a).primary_std = nanstd(plot_struct(a).primary_data(:,~plot_struct(a).primary_outlier_flags),[],2);
    % time vector
    plot_struct(a).time = cell2mat(ExpCell(2:end,2))/60;
end

%% Generate plots

% extract reference data
cage_data = plot_struct(end).ncr_data;
cage_outliers = plot_struct(end).ncr_outlier_flags;
negative_data = plot_struct(end).primary_data;
negative_outliers = plot_struct(end).primary_outlier_flags;

negative_mean = plot_struct(end).primary_mean';
negative_std = plot_struct(end).primary_std';

cage_mean = plot_struct(end).ncr_mean';
cage_std = plot_struct(end).ncr_std';

cage_ub = cage_mean + cage_std;
cage_lb = cage_mean - cage_std;
negative_ub = negative_mean + negative_std;
negative_lb = negative_mean - negative_std;

% generate color map
cmap = brewermap([],'Set2');
% plot symbol shapes
sym_cell = {'o','s'};
% initialize max and time to max arrays
max_delta_array = NaN(numel(activator_rows),2);
t_max_array = NaN(numel(activator_rows),2);

for a = 1:numel(activator_rows)
  close all
  % get activator val
  ac_val = plot_struct(a).ac_val;
  % extract data
  ncr_data = plot_struct(a).ncr_data;
  ncr_outliers = plot_struct(a).ncr_outlier_flags;
  primary_data = plot_struct(a).primary_data;
  primary_outliers = plot_struct(a).primary_outlier_flags;
  
  primary_mean = plot_struct(a).primary_mean';
  primary_std = plot_struct(a).primary_std';
  
  ncr_mean = plot_struct(a).ncr_mean';
  ncr_std = plot_struct(a).ncr_std';
  
  time = plot_struct(a).time';
    
  % plot individualdata sets
  full_plot = figure;
  hold on
  ncr = [];
  for n = 1:size(ncr_data,2)
    ncr = [ncr scatter(time,ncr_data(:,n),25,sym_cell{ncr_outliers(n)+1},'MarkerFaceColor',cmap(2,:),'MarkerEdgeColor','black','MarkerFaceAlpha',0.7)];
  end
  prim = [];
  for p = 1:size(primary_data,2)
    prim = [prim scatter(time,primary_data(:,p),25,sym_cell{primary_outliers(p)+1},'MarkerFaceColor',cmap(3,:),'MarkerEdgeColor','black','MarkerFaceAlpha',0.7)];
  end
  xlabel('time (minutes)')
  ylabel('fluorescence (au)')
  legend([ncr(1) prim(1)], ['ncr replicates (' num2str(ac_val) 'nM)'],['primary only replicates (' num2str(ac_val) 'nM)']','Location','southeast')
  set(gca,'Fontsize',12)
  xlim([0 max(time)])
  % save
  saveas(full_plot,[FigPath num2str(1e6*ac_val) 'fM_raw_data_scatter.png'])
  
  % mean and se plots
  mean_plot = figure;
  hold on  
  
  ncr_ub = ncr_mean + ncr_std;
  ncr_lb = ncr_mean - ncr_std;
  prim_ub = primary_mean + primary_std;
  prim_lb = primary_mean - primary_std;
  
  fill([time fliplr(time)], [ncr_lb fliplr(ncr_ub)],cmap(2,:),'EdgeColor','black','FaceAlpha',0.5,'EdgeAlpha',0)
  fill([time fliplr(time)], [prim_lb fliplr(prim_ub)],cmap(3,:),'EdgeColor','black','FaceAlpha',0.5,'EdgeAlpha',0)
    
  s1 = plot(time,ncr_mean,'Color',cmap(2,:)/1.2,'LineWidth',1.5);    
  s2 = plot(time,primary_mean,'Color',cmap(3,:)/1.2,'LineWidth',1.5);    

  
  xlabel('time (minutes)')
  ylabel('fluorescence (au)')
  legend([s1 s2], ['ncr (' num2str(ac_val) 'nM)'],['primary (' num2str(ac_val) 'nM)']','Location','southeast')
  set(gca,'Fontsize',12)
  xlim([0 max(time)])
  % save
  saveas(mean_plot,[FigPath num2str(1e6*ac_val) 'fM_mean_data_plot.png'])    
  
  % comparison plots
  if a < numel(activator_rows)
    
    % basic ref plot
    mean_ref_plot = figure;
    hold on  
    
    fill([time fliplr(time)], [ncr_lb fliplr(ncr_ub)],cmap(2,:),'EdgeColor','black','FaceAlpha',0.5,'EdgeAlpha',0)
    fill([time fliplr(time)], [prim_lb fliplr(prim_ub)],cmap(3,:),'EdgeColor','black','FaceAlpha',0.5,'EdgeAlpha',0)
    fill([time fliplr(time)], [cage_lb fliplr(cage_ub)],cmap(8,:),'EdgeColor','black','FaceAlpha',0.5,'EdgeAlpha',0)
    fill([time fliplr(time)], [negative_lb fliplr(negative_ub)],cmap(9,:),'EdgeColor','black','FaceAlpha',0.5,'EdgeAlpha',0)

    s1 = plot(time,ncr_mean,'Color',cmap(2,:)/1.2,'LineWidth',1.5);    
    s2 = plot(time,primary_mean,'Color',cmap(3,:)/1.2,'LineWidth',1.5); 
    s3 = plot(time,cage_mean,'Color',cmap(8,:)/1.2,'LineWidth',1.5);    
    s4 = plot(time,negative_mean,'Color',cmap(9,:)/1.2,'LineWidth',1.5); 


    xlabel('time (minutes)')
    ylabel('fluorescence (au)')
    legend([s1 s2 s3 s4], ['ncr (' num2str(ac_val) 'nM)'],['primary (' num2str(ac_val) 'nM)']','cage only','no activator','Location','southeast')
    set(gca,'Fontsize',12)
    xlim([0 max(time)])
    % save
    saveas(mean_ref_plot,[FigPath num2str(1e6*ac_val) 'fM_mean_ref_data_plot.png']) 
    
    % difference plot
    diff_plot = figure;
    hold on  
    ncr_delta_sm = imgaussfilt(ncr_mean-cage_mean,20);
    primary_delta_sm = imgaussfilt(primary_mean-negative_mean,20);
    
    scatter(time,ncr_mean-cage_mean,25,'MarkerFaceColor',cmap(2,:),'MarkerEdgeColor','black','MarkerFaceAlpha',0.7,'MarkerEdgeAlpha',1)
    scatter(time,primary_mean-negative_mean,25,'MarkerFaceColor',cmap(3,:),'MarkerEdgeColor','black','MarkerFaceAlpha',0.7,'MarkerEdgeAlpha',1)

    s1 = plot(time,imgaussfilt(ncr_delta_sm,10),'Color',cmap(2,:),'LineWidth',2);    
    s2 = plot(time,imgaussfilt(primary_delta_sm,10),'Color',cmap(3,:),'LineWidth',2);     

    xlabel('time (minutes)')
    ylabel('fluorescence (au)')
    legend([s1 s2], ['ncr delta (' num2str(ac_val) 'nM)'],['primary delta (' num2str(ac_val) 'nM)']','Location','northeast')
    set(gca,'Fontsize',12)
    grid on
    xlim([0 max(time)])
    % save
    saveas(diff_plot,[FigPath num2str(1e6*ac_val) 'fM_diff_data_plot.png']) 
    
    % record metrics
    [max_delta_array(a,1), mi] = max(primary_delta_sm);
    t_max_array(a,1) = time(mi);
    
    [max_delta_array(a,2), mi] = max(ncr_delta_sm);
    t_max_array(a,2) = time(mi);
  end
end


cmap1 = brewermap([],'set2');
cmap2 = brewermap(size(max_delta_array,1),'Blues');
close all

if strcmp(SheetName,'NCR018')
  plot_indices = [1 2 3 4 6];
else  
  plot_indices = 1:size(max_delta_array,1);
end

% check for 
max_delta_array_plot = max_delta_array;
max_delta_array_plot(max_delta_array_plot<=0) = realmin;

shift_fig = figure;
hold on
plot(max_delta_array_plot(plot_indices,:)',max_delta_array_plot(plot_indices,:)'./t_max_array(plot_indices,:)','Color','black','LineWidth',1)
for i = plot_indices
  scatter(max_delta_array_plot(i,1),max_delta_array_plot(i,1)./t_max_array(i,1),300/i,'MarkerFaceColor',cmap2(3,:),'MarkerEdgeColor','black','LineWidth',1)
  scatter(max_delta_array_plot(i,2),max_delta_array_plot(i,2)./t_max_array(i,2),300/i,'MarkerFaceColor',cmap2(7,:),'MarkerEdgeColor','black','LineWidth',1)
end
grid on
xlabel('detection rate')
ylabel('maximum difference')
set(gca,'XScale','log')
set(gca,'YScale','log')
axis([1e0 1e4 1e-2 1e2])
set(gca,'Fontsize',12)
saveas(shift_fig,[FigPath 'ncr_shift_plot.png'])